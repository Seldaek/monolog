name: "Continuous Integration"

on:
  - push
  - pull_request

env:
  COMPOSER_FLAGS: "--no-progress --prefer-dist"

jobs:
  tests:
    name: "CI"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"

        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: Run CouchDB
        timeout-minutes: 1
        continue-on-error: true
        uses: "cobot/couchdb-action@master"
        with:
          couchdb version: '3.2.2'

      - name: Run MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: 5.0

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mongodb, redis, amqp
          tools: "composer:v2"

      - name: Add require for mongodb/mongodb to make tests runnable
        run: 'composer require ${{ env.COMPOSER_FLAGS }} mongodb/mongodb --dev --no-update'

      - name: "Change dependencies"
        run: composer require --no-update --no-interaction --dev elasticsearch/elasticsearch:^7

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ env.COMPOSER_FLAGS }}"

      - name: "Run tests"
        run: "composer exec phpunit -- --exclude-group Elasticsearch --verbose"

      - name: "Run tests with psr/log 3"
        if: "contains(matrix.dependencies, 'highest') && matrix.php-version >= '8.0'"
        run: |
          composer remove --no-update --dev graylog2/gelf-php ruflin/elastica elasticsearch/elasticsearch rollbar/rollbar
          composer require --no-update psr/log:^3
          composer update -W ${{ env.COMPOSER_FLAGS }}
          composer exec phpunit -- --exclude-group Elasticsearch --verbose

  tests-es-7:
    name: "CI with ES ${{ matrix.es-version }} on PHP ${{ matrix.php-version }}"

    needs: "tests"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"

        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

        es-version:
          - "7.0.0"
          - "7.1.0"
          - "7.2.0"
          - "7.3.0"
          - "7.4.0"
          - "7.5.0"
          - "7.6.0"
          - "7.7.0"
          - "7.8.0"
          - "7.9.0"
          - "7.10.0"
          - "7.11.0"
          - "7.12.0"
          - "7.13.0"
          - "7.14.0"
          - "7.15.0"
          - "7.16.0"
          - "7.17.0"

        exclude:
          # php 7.3 is required
          - php-version: "7.2"
            es-version: "7.12.0"
          - php-version: "7.2"
            es-version: "7.13.0"
          - php-version: "7.2"
            es-version: "7.14.0"
          - php-version: "7.2"
            es-version: "7.15.0"
          - php-version: "7.2"
            es-version: "7.16.0"
          - php-version: "7.2"
            es-version: "7.17.0"
          # tests failing due an error in deprecated guzzlehttp/ringphp
          - php-version: "7.3"
            es-version: "7.0.0"
          - php-version: "7.3"
            es-version: "7.1.0"
          - php-version: "7.3"
            es-version: "7.2.0"
          - php-version: "7.3"
            es-version: "7.3.0"
          - php-version: "7.3"
            es-version: "7.4.0"
          - php-version: "7.3"
            es-version: "7.5.0"
          - php-version: "7.4"
            es-version: "7.0.0"
          - php-version: "7.4"
            es-version: "7.1.0"
          - php-version: "7.4"
            es-version: "7.2.0"
          - php-version: "7.4"
            es-version: "7.3.0"
          - php-version: "7.4"
            es-version: "7.4.0"
          - php-version: "7.4"
            es-version: "7.5.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      # required for elasticsearch
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Run Elasticsearch
        timeout-minutes: 1
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: "${{ matrix.es-version }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mongodb, redis, amqp
          tools: "composer:v2"

      - name: "Change dependencies"
        run: "composer require --no-update --no-interaction --dev elasticsearch/elasticsearch:^${{ matrix.es-version }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ env.COMPOSER_FLAGS }}"

      - name: "Run tests"
        run: "composer exec phpunit -- --group Elasticsearch,Elastica --verbose"

      - name: "Run tests with psr/log 3"
        if: "contains(matrix.dependencies, 'highest') && matrix.php-version >= '8.0'"
        run: |
          composer remove --no-update --dev graylog2/gelf-php ruflin/elastica elasticsearch/elasticsearch rollbar/rollbar
          composer require --no-update --no-interaction --dev ruflin/elastica elasticsearch/elasticsearch:^${{ matrix.es-version }}
          composer require --no-update psr/log:^3
          composer update -W ${{ env.COMPOSER_FLAGS }}
          composer exec phpunit -- --group Elasticsearch,Elastica --verbose

  tests-es-8:
    name: "CI with ES ${{ matrix.es-version }} on PHP ${{ matrix.php-version }}"

    needs: "tests"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"

        php-version:
          # ES 8 requires PHP 7.4+
          - "7.4"
          - "8.0"
          - "8.1"

        dependencies:
          - "highest"
          - "lowest"

        es-version:
          - "8.0.0"
          - "8.1.0"
          - "8.2.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      # required for elasticsearch
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Run Elasticsearch
        timeout-minutes: 1
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: "${{ matrix.es-version }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mongodb, redis, amqp
          tools: "composer:v2"

      - name: "Change dependencies"
        run: |
          composer remove --no-update --dev graylog2/gelf-php ruflin/elastica elasticsearch/elasticsearch rollbar/rollbar
          composer require --no-update --no-interaction --dev elasticsearch/elasticsearch:^${{ matrix.es-version }}

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ env.COMPOSER_FLAGS }}"

      - name: "Run tests"
        run: "composer exec phpunit -- --group Elasticsearch,Elastica --verbose"

      - name: "Run tests with psr/log 3"
        if: "contains(matrix.dependencies, 'highest') && matrix.php-version >= '8.0'"
        run: |
          composer require --no-update psr/log:^3
          composer update -W ${{ env.COMPOSER_FLAGS }}
          composer exec phpunit -- --group Elasticsearch,Elastica --verbose
